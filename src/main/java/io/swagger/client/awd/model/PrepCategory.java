/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.awd.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The preparation category for shipping an item to Amazon&#39;s fulfillment network.
 */
@JsonAdapter(PrepCategory.Adapter.class)
public enum PrepCategory {
  
  ADULT("ADULT"),
  
  BABY("BABY"),
  
  FC_PROVIDED("FC_PROVIDED"),
  
  FRAGILE("FRAGILE"),
  
  GRANULAR("GRANULAR"),
  
  HANGER("HANGER"),
  
  LIQUID("LIQUID"),
  
  PERFORATED("PERFORATED"),
  
  SET("SET"),
  
  SHARP("SHARP"),
  
  SMALL("SMALL"),
  
  TEXTILE("TEXTILE"),
  
  NO_PREP("NO_PREP"),
  
  UNKNOWN("UNKNOWN");

  private String value;

  PrepCategory(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PrepCategory fromValue(String text) {
    for (PrepCategory b : PrepCategory.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<PrepCategory> {
    @Override
    public void write(final JsonWriter jsonWriter, final PrepCategory enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PrepCategory read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PrepCategory.fromValue(String.valueOf(value));
    }
  }
}

